#!/bin/sh
# ---------------------------------------------------------------------
# Author: Didik Supriadi
# ---------------------------------------------------------------------
# Nanime is a script to easily watch anime from nanime.tv
# Copyright (C) 2020  Didik Supriadi
#
# This program is free software: you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation, either version 3 of the License, or
# (at your option) any later version.
#
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with this program.  If not, see <https://www.gnu.org/licenses/>.
# ---------------------------------------------------------------------
# Usage:
#   nanime <anime-url-from-nanime> <start-episode> <end-episode>
# ---------------------------------------------------------------------

LINK="$1";
BEGIN="$2";
END="$3";
PARAM="$@";

CURL=$(command -v curl);
MPV=$(command -v mpv);

declare -a EPS;
declare -a FILES;
declare -a SOURCES;

YELLOW='\033[1;33m';
NOCOLOR='\033[0m';

say() {
  echo -e "nanime: $@";
};

warn() {
  say "${YELLOW}[warning] $@${NOCOLOR}";
};

host_unresolved_alert() {
  say "could not resolve host";
  say "host should looks like: http[s]://..";
};

miss_arguments_alert() {
  warn "missing arguments";
};

usage() {
  say "usage:";
  say "nanime <anime-url-from-nanime> <start-episode> <end-episode>";
};

license() {
  echo "Nanime  Copyright (C) 2019  Didik Supriadi";
  echo "This program comes with ABSOLUTELY NO WARRANTY; for details type \`show w'.";
  echo "This is free software, and you are welcome to redistribute it";
  echo "under certain conditions; type \`show c' for details.";
};

get_episode_url() {
  CODE='
    BEGIN {
      FS="(<tr><td><a href=\"|\">)";
      OFS="\n";
    }

    /table-episode/ {
      for (i = NF; i >= 1; i--) {
        if ($i ~ /http/) {
          print $i;
        }
      }
    }
  ';

  ${CURL} "$1" 2>/dev/null \
    | awk "$CODE";
};

get_episode_title() {
  CODE='
    BEGIN {
      FS="anime/";
    }

    {
      print $2;
    }
  ';

  echo "$1" | awk "$CODE";
};

get_total_episode() {
  CODE='
    BEGIN {
      FS="(<|</)td>";
    }

    /Total Episode/ {
      if ( $23 ~ /^[0-9]+$/ ) {
        print $23;
      }
    }
  ';

  ${CURL} "$1" 2>/dev/null \
    | awk "$CODE";
};
